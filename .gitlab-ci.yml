variables:
  ARTIFACT_NAME: order-api-1.0.$CI_PIPELINE_IID.jar

stages:
  - test
  - build
  - functest
  - deploy

unit tests:
  stage: test
  image: openjdk:12-alpine
  script:
    - ./mvnw test

integration tests:
  stage: test
  image: openjdk:12-alpine
  script:
    - ./mvnw verify -DskipUTs=true

build a jar:
  stage: build
  image: openjdk:12-alpine
  script:
    - ./mvnw package -Dmaven.test.skip=true
    - mkdir ./build
    - mv target/order-api-1.0.0.jar ./build/$ARTIFACT_NAME
  artifacts:
    paths:
      - ./build

functional testing:
  stage: functest
  image: alexvaitsekhovich/alpine-jre-newman
  script:
    - java -jar -Dspring.profiles.active=testing ./build/$ARTIFACT_NAME &
    - sleep 40
    - newman run src/main/resources/testing_data/functional_testing.postman_collection.json
  dependencies:
    - build a jar

deploy to docker hub:
  stage: deploy
  image: alexvaitsekhovich/ubuntu-docker-inside
  variables:
    ARTIFACT_NAME: order-api-1.0.$CI_PIPELINE_IID.jar
    DOCKER_IMAGE: order-api
    DOCKER_REPO: alexvaitsekhovich
  script:
    - docker login -u "alexvaitsekhovich" -p "${DOCKERHUB_PASSWORD}"
    - echo "Building image $DOCKER_IMAGE"
    - docker build -t "${DOCKER_REPO}"/"${DOCKER_IMAGE}" .
    - echo "Test running $DOCKER_IMAGE"
    - docker run "${DOCKER_REPO}"/"${DOCKER_IMAGE}"
    - echo "Pushing $DOCKER_IMAGE to docker hub"
    - docker push "${DOCKER_REPO}"/"${DOCKER_IMAGE}":latest
  only:
    - master